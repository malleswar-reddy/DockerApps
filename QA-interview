













print name of all EMPLOYEES staying in bangalore city using java 8


List<String> empnames =  emplist.stream().filter(e -> e.getCity().Equals("Bangalore")).map(Empyee::getName).collect(Collect.toList())


2) Print frequncy of characters
 
input: {a,a,b,a,c,c,c}
 
output: 
a=3
b=1
c=3

map<String,Interger> frequncyChrater=Arrays.aslist({a,a,b,a,c,c,c}).stream().mapTOobj(c -> c+" ")
								.collect(collectors.GroupBy(funcation.idenity(),Collectors.sum(c-> 1));




Class Parent{
	
	public Object m1(){
		Sop("Parent m1");
	}
}


Class child extends Parent {
	
	@Override
	public String m1() throw Exception {
		Sop("Child m1");
	}
}













SELECT DEPT, count(*) as No from	 EMpoyee where Groupby DEPT ;



customer_id	first_name	last_name	age	country
1			John	Doe				31	USA
2			Robert	Luna			22	USA
3			David	Robinson		22	UK
4			John	Reinhardt		25	UK
5			Betty	Doe				28	UAE


Orders
order_id	item	amount	customer_id
1		Keyboard	400		4
2		Mouse		300		4
3		Monitor		12000	3
4		Keyboard	400		1
5		Mousepad	250		2
 

 select * from Customer c join  Orders or on   c.customer_id = or.customer_id where Groupby(customer_id)



colm1, colm2
1 1 
1 0
0 1 
1 0
0 0
0 1
1 0

1 1 - 1 0
0 1 - 0 0

when & then 

slect colm1 c1,colm2 c2 from table where c1 = 1 then 




select ditent(*) form where 


Emplooyee

  name , mobile no, email


with data as (select emp.* RowNumber() OVER (Parttion By emil ORDER by emai) as rn form empyoee) 
delete from data where rn > 1;

DELETE FROM emp where ROWID NOT In (SELECT MAX(RoWID) form emp GROUP BY Email);




odd number is left  & even number 

{1,3,5,4,2,6}

{1,2,3,4,5,6}


n = 6 
for(int i = 0 ; i < n/2 ; i ++ ){
	int temp =  A[i];
	if(temp % 2 == 0){
		A [i] = A[i+n/2];
		A[i+ n/2] = temp;
	}
}

{1,3,2,4,5,6}

1,3,5

int left = 0;
int right =. n-1;
while( left < right){
	while(A[left] % 2 != 0 && left < right){
	  left ++;
	}
}


adult or non-adult


SELECT *,case when age >= 10 then 'Adult' else 'NotAdult' AS Adult_satus FROM EMPYOYEE;













<data> <element>AAAA</element>
  <element>AA</element>
  <element>BB</element>
  <element>BBBB</element>
  <element>XX</element>
  <element>CCCCC</element>
</data>";

        Expected output:
        AA
                BB
        XX
                AAAA
        BBBB
                CCCCC











In the spring application, I have 2 classes and hold each other. Is there a problem or not?
@Component
public Class A {
 @Autowired
 private B b;
 
}


@Component
public Class B {
 @Autowired
 private A a;

}









{3, 5, 7, 3, 7, 9, 6}


Arrays.aslist({3, 5, 7, 3, 7, 9, 6}).stream().collect(Collecter.Groupby,collect.)

 Set<Inetrgier> intset = new HashSet();

for(int i; i < array.length;i ++){
	if(!intset.add(array[i])){
	  system.out.println(array[i]);
	}
}



[4:06 PM] Chandan Kumar (ext)
{3, -5, -7, 12, 7, 9, 6}
int n = array.length();

Set<Integer>  lagest = new HasSet();

for(int i = 0 ; i < n ; i ++){
	
	Set<Integer>  subset = new HasSet();

	int sum = 0;

	for(int j = i ; j < n; j++){
		sum + = array[j];
		if(sum == 0){
		  subset.add(array[j]);
		  if(sub)


		}
	}

}














empyee
	id,name,Deignation

Salay
	id, emoid,Ammount,


Select * from Employee where id = ( Select empid from salarly Order by ammount ASC limit 2,3 ) 





SELECT e.id,e.name,e.decination,s.ammount from Employee e  join  salarly s  on e.id = s.empid  Order by s.ammount ASC offset 2 rows fetch 1 rows only



Limit 2,3;







































